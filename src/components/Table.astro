---
export interface Props {
  headers: string[];
  data: any[];
  type: 'posiciones' | 'goleadores' | 'fairplay';
}

const { headers, data, type } = Astro.props;

// Para goleadores, separamos los primeros 7 y el resto
const initialData = type === 'goleadores' ? data.slice(0, 7) : data;
const remainingData = type === 'goleadores' ? data.slice(7) : [];
---

<div class="overflow-x-auto bg-neo-white border-4 border-neo-black rounded-2xl shadow-neo-xl">
  <table class="w-full text-sm md:text-base">
    <thead class="bg-neo-yellow border-b-4 border-neo-black sticky top-0 z-10">
      <tr>
        {headers.map((header) => (
          <th class="px-4 py-4 text-left font-black text-neo-black uppercase tracking-wide border-r-2 border-neo-black last:border-r-0">
            {header}
          </th>
        ))}
      </tr>
    </thead>
    <tbody id="goleadores-body">
      {initialData.map((row, index) => (
        <tr class={`border-b-2 border-gray-200 hover:bg-neo-lime hover:bg-opacity-20 transition-colors duration-200 ${index % 2 === 0 ? 'bg-gray-50' : 'bg-neo-white'}`}>
          {type === 'posiciones' && (
            <>
              <td class="px-4 py-4 font-bold text-neo-black border-r-2 border-gray-200">{row.pos}</td>
              <td class="px-4 py-4 border-r-2 border-gray-200">
                <div class="flex items-center gap-3">
                  <img src={row.logo} alt={row.equipo} class="w-8 h-8 object-cover rounded-full border-2 border-neo-black" loading="lazy">
                  <span class="font-semibold text-neo-black">{row.equipo}</span>
                </div>
              </td>
              <td class="px-4 py-4 text-center font-semibold border-r-2 border-gray-200">{row.pj}</td>
              <td class="px-4 py-4 text-center font-semibold text-green-600 border-r-2 border-gray-200">{row.pg}</td>
              <td class="px-4 py-4 text-center font-semibold text-yellow-600 border-r-2 border-gray-200">{row.pe}</td>
              <td class="px-4 py-4 text-center font-semibold text-red-600 border-r-2 border-gray-200">{row.pp}</td>
              <td class="px-4 py-4 text-center font-semibold border-r-2 border-gray-200">{row.gf}</td>
              <td class="px-4 py-4 text-center font-semibold border-r-2 border-gray-200">{row.gc}</td>
              <td class="px-4 py-4 text-center font-semibold border-r-2 border-gray-200">{row.dg > 0 ? `+${row.dg}` : row.dg}</td>
              <td class="px-4 py-4 text-center font-bold text-lg text-neo-black bg-neo-cyan bg-opacity-30">{row.pts}</td>
            </>
          )}
          {type === 'goleadores' && (
            <>
              <td class="px-4 py-4 font-bold text-neo-black border-r-2 border-gray-200">{index + 1}</td>
              <td class="px-4 py-4 font-semibold text-neo-black border-r-2 border-gray-200">{row.jugador}</td>
              <td class="px-4 py-4 font-semibold text-neo-black border-r-2 border-gray-200">{row.equipo}</td>
              <td class="px-4 py-4 text-center font-bold text-lg text-neo-black bg-neo-magenta bg-opacity-30">{row.goles}</td>
            </>
          )}
        </tr>
      ))}
      
      {/* Filas adicionales (ocultas inicialmente) */}
      {type === 'goleadores' && remainingData.map((row, index) => (
        <tr class="hidden beyond-initial border-b-2 border-gray-200 hover:bg-neo-lime hover:bg-opacity-20 transition-colors duration-200 bg-neo-white">
          <td class="px-4 py-4 font-bold text-neo-black border-r-2 border-gray-200">{initialData.length + index + 1}</td>
          <td class="px-4 py-4 font-semibold text-neo-black border-r-2 border-gray-200">{row.jugador}</td>
          <td class="px-4 py-4 font-semibold text-neo-black border-r-2 border-gray-200">{row.equipo}</td>
          <td class="px-4 py-4 text-center font-bold text-lg text-neo-black bg-neo-magenta bg-opacity-30">{row.goles}</td>
        </tr>
      ))}
    </tbody>
  </table>
  
  {/* Botón para mostrar más/menos (solo para goleadores) */}
  {type === 'goleadores' && remainingData.length > 0 && (
    <div class="text-center mt-4 pb-4">
      <button
        id="toggle-goleadores"
        class="bg-neo-blue text-black font-bold py-2 px-4 rounded-2xl border-2 border-neo-black shadow-neo-sm hover:shadow-neo-md active:shadow-neo-sm transition-all duration-200
        hover:bg-neo-yellow hover:border-neo-magenta hover:text-neo-magenta hover:-translate-y-1 hover:scale-105"
      >
        Ver todos
      </button>
    </div>
  )}
</div>

<script>
// Solo ejecutar para tablas de goleadores
const toggleButton = document.getElementById('toggle-goleadores');
if (toggleButton) {
  const beyondRows = document.querySelectorAll('.beyond-initial');
  let showingAll = false;
  
  toggleButton.addEventListener('click', () => {
    showingAll = !showingAll;
    
    if (showingAll) {
      // Mostrar todas las filas
      beyondRows.forEach(row => {
        row.classList.remove('hidden');
        // Alternar colores de fondo para las filas pares/impares
        let rowIndex = -1;
        if (row.parentNode) {
          rowIndex = Array.from(row.parentNode.children).indexOf(row);
        }
        row.classList.toggle('bg-gray-50', rowIndex % 2 === 0);
        row.classList.toggle('bg-neo-white', rowIndex % 2 !== 0);
      });
      toggleButton.textContent = 'Ver menos';
    } else {
      // Ocultar filas beyond-initial
      beyondRows.forEach(row => row.classList.add('hidden'));
      toggleButton.textContent = 'Ver todos';
    }
  });
}
</script>

<style>
.hidden {
  display: none;
}
</style>